// Code generated by protoc-gen-go.
// source: github.com/HailoOSS/platform/proto/error/error.proto
// DO NOT EDIT!

/*
Package com_hailocab_kernel_platform_error is a generated protocol buffer package.

It is generated from these files:
	github.com/HailoOSS/platform/proto/error/error.proto

It has these top-level messages:
	PlatformError
*/
package com_hailocab_kernel_platform_error

import proto "github.com/hailocab/protobuf/proto"
import json "encoding/json"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type PlatformError_ErrorType int32

const (
	PlatformError_INTERNAL_SERVER_ERROR PlatformError_ErrorType = 1
	PlatformError_BAD_REQUEST           PlatformError_ErrorType = 2
	PlatformError_BAD_RESPONSE          PlatformError_ErrorType = 3
	PlatformError_TIMEOUT               PlatformError_ErrorType = 4
	PlatformError_FORBIDDEN             PlatformError_ErrorType = 5
	PlatformError_NOT_FOUND             PlatformError_ErrorType = 6
	PlatformError_CONFLICT              PlatformError_ErrorType = 7
)

var PlatformError_ErrorType_name = map[int32]string{
	1: "INTERNAL_SERVER_ERROR",
	2: "BAD_REQUEST",
	3: "BAD_RESPONSE",
	4: "TIMEOUT",
	5: "FORBIDDEN",
	6: "NOT_FOUND",
	7: "CONFLICT",
}
var PlatformError_ErrorType_value = map[string]int32{
	"INTERNAL_SERVER_ERROR": 1,
	"BAD_REQUEST":           2,
	"BAD_RESPONSE":          3,
	"TIMEOUT":               4,
	"FORBIDDEN":             5,
	"NOT_FOUND":             6,
	"CONFLICT":              7,
}

func (x PlatformError_ErrorType) Enum() *PlatformError_ErrorType {
	p := new(PlatformError_ErrorType)
	*p = x
	return p
}
func (x PlatformError_ErrorType) String() string {
	return proto.EnumName(PlatformError_ErrorType_name, int32(x))
}
func (x PlatformError_ErrorType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *PlatformError_ErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlatformError_ErrorType_value, data, "PlatformError_ErrorType")
	if err != nil {
		return err
	}
	*x = PlatformError_ErrorType(value)
	return nil
}

type PlatformError struct {
	Type             *PlatformError_ErrorType `protobuf:"varint,1,req,name=type,enum=com.hailocab.kernel.platform.error.PlatformError_ErrorType" json:"type,omitempty"`
	Code             *string                  `protobuf:"bytes,2,req,name=code" json:"code,omitempty"`
	Description      *string                  `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
	HttpCode         *uint32                  `protobuf:"varint,4,opt,name=httpCode" json:"httpCode,omitempty"`
	Context          []string                 `protobuf:"bytes,5,rep,name=context" json:"context,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PlatformError) Reset()         { *m = PlatformError{} }
func (m *PlatformError) String() string { return proto.CompactTextString(m) }
func (*PlatformError) ProtoMessage()    {}

func (m *PlatformError) GetType() PlatformError_ErrorType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PlatformError_INTERNAL_SERVER_ERROR
}

func (m *PlatformError) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *PlatformError) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *PlatformError) GetHttpCode() uint32 {
	if m != nil && m.HttpCode != nil {
		return *m.HttpCode
	}
	return 0
}

func (m *PlatformError) GetContext() []string {
	if m != nil {
		return m.Context
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.hailocab.kernel.platform.error.PlatformError_ErrorType", PlatformError_ErrorType_name, PlatformError_ErrorType_value)
}
